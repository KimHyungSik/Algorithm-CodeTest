#include <string>
#include <vector>
#include <algorithm>
#include <queue>

using namespace std;

struct cmp {
    bool operator()(vector<int> a, vector<int>b) {
        return a.at(1) > b.at(1);
    }
};

int solution(vector<vector<int>> jobs) {
    int answer = 0, counter = 0, timer = 0;
    sort(jobs.begin(), jobs.end());

    priority_queue<vector<int>, vector<vector<int>>, cmp> q;

    while (counter < jobs.size() || !q.empty()) {
        if (jobs.size() > counter && timer >= jobs[counter][0]) {
            q.push(jobs[counter++]);
            continue;
        }

        if (!q.empty()) {
            timer += q.top()[1];
            answer += timer - q.top()[0];
            q.pop();
        }
        else
            timer = jobs[counter][0];
    }

    return answer / jobs.size();
 }